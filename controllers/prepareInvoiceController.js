exports.index = async (req, res, next) => {};

exports.insert = async (req, res, next) => {
  const items = req.body;

  const query = `
INSERT INTO (
[OUCONO],
[OUDIVI],
[OUFACI],
[OUORNO],
[OUPONR],
[OUOSSQ],
[OUOSDT],
[OUOSPE],
[OUCUNO],
[OUCUCL],
[OUCUST],
[OUORTP],
[OUPYNO],
[OUCUCD],
[OUSMCD],
[OUCSCD],
[OUFRE1],
[OUWHLO],
[OUITNO],
[OUITGR],
[OUITTY],
[OUITCL],
[OUORST],
[OUORQT],
[OUORQA],
[OUALUN],
[OUCOFA],
[OUDMCF],
[OUSPUN],
[OUORQS],
[OUSTUN],
[OUORQB],
[OUGRWE],
[OUNEWE],
[OUDCCD],
[OUSAPR],
[OUGRPR],
[OUSAAM],
[OUPRMO],
[OUDISY],
[OUDWDT],
[OUCODT],
[OUUCOS],
[OUUCCD],
[OUUNMS],
[OUORTK],
[OUADID],
[OUINRC],
[OURGDT],
[OURGTM],
[OULMDT],
[OUCHNO],
[OUCHID],
[OULMTS],
[OUACOS],
[OUTEPY],
[OUDECU],
[OURQWH]
)VALUES(
:coNo,
:OUDIVI,
:OUFACI,
:orderNo,
:productNo,
:OUOSSQ,
:OUOSDT,
:OUOSPE,
:customerNo,
:customerChannel,
:OUCUST,
:orderType,
:OUPYNO,
:OUCUCD,
:OUSMCD,
:OUCSCD,
:OUFRE1,
:warehouse,
:itemNo,
:OUITGR,
:OUITTY,
:OUITCL,
:orderStatus,
:OUORQT,
:OUORQA,
:itemUnit,
:OUCOFA,
:OUDMCF,
:OUSPUN,
:OUORQS,
:OUSTUN,
:OUORQB,
:itemGrossWight,
:itemNetWight,
:OUDCCD,
:OUSAPR,
:OUGRPR,
:OUSAAM,
:OUPRMO,
:OUDISY,
:OUDWDT,
:OUCODT,
:OUUCOS,
:OUUCCD,
:OUUNMS,
:OUORTK,
:OUADID,
:OUINRC,
:OURGDT,
:OURGTM,
:OULMDT,
:OUCHNO,
:OUCHID,
:OULMTS,
:OUACOS,
:OUTEPY,
:OUDECU,
:OURQWH)`;

  for (let item of items) {
    const replacements = {
      coNo: coNo,
      OUDIVI: OUDIVI,
      OUFACI: OUFACI,
      orderNo: orderNo,
      productNo: productNo,
      OUOSSQ: OUOSSQ,
      OUOSDT: OUOSDT,
      OUOSPE: OUOSPE,
      customerNo: customerNo,
      customerChannel: customerChannel,
      OUCUST: OUCUST,
      orderType: orderType,
      OUPYNO: OUPYNO,
      OUCUCD: OUCUCD,
      OUSMCD: OUSMCD,
      OUCSCD: OUCSCD,
      OUFRE1: OUFRE1,
      warehouse: warehouse,
      itemNo: itemNo,
      OUITGR: OUITGR,
      OUITTY: OUITTY,
      OUITCL: OUITCL,
      orderStatus: orderStatus,
      OUORQT: OUORQT,
      OUORQA: OUORQA,
      itemUnit: itemUnit,
      OUCOFA: OUCOFA,
      OUDMCF: OUDMCF,
      OUSPUN: OUSPUN,
      OUORQS: OUORQS,
      OUSTUN: OUSTUN,
      OUORQB: OUORQB,
      itemGrossWight: itemGrossWight,
      itemNetWight: itemNetWight,
      OUDCCD: OUDCCD,
      OUSAPR: OUSAPR,
      OUGRPR: OUGRPR,
      OUSAAM: OUSAAM,
      OUPRMO: OUPRMO,
      OUDISY: OUDISY,
      OUDWDT: OUDWDT,
      OUCODT: OUCODT,
      OUUCOS: OUUCOS,
      OUUCCD: OUUCCD,
      OUUNMS: OUUNMS,
      OUORTK: OUORTK,
      OUADID: OUADID,
      OUINRC: OUINRC,
      OURGDT: OURGDT,
      OURGTM: OURGTM,
      OULMDT: OULMDT,
      OUCHNO: OUCHNO,
      OUCHID: OUCHID,
      OULMTS: OULMTS,
      OUACOS: OUACOS,
      OUTEPY: OUTEPY,
      OUDECU: OUDECU,
      OURQWH: OURQWH,
    };
    await sequelize.query(query, {
      replacements,
      type: sequelize.QueryTypes.INSERT,
    });
  }

  res.json(item);
};
